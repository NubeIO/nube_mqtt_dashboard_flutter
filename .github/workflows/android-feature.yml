name: Android Feature Pull Request

on:
  pull_request:
    branches:
      - develop
jobs:
  build:
    name: generate-apk
    runs-on: ubuntu-18.04
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Release Config 
        env:  
          RELEASE_CONFIG: ${{secrets.RELEASE_CONFIG}}
          RELEASE_KEYSTORE: ${{secrets.RELEASE_KEYSTORE}}
        run: |
          echo $RELEASE_CONFIG > android/app/keystore/release.keystore.64
          echo $RELEASE_KEYSTORE > android/app/keystore/release.b64
          base64 -d android/app/keystore/release.b64 > android/app/keystore/release.jks
          base64 -d android/app/keystore/release.keystore.64 > android/app/keystore/release.keystore.properties
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.4'
      # Get flutter dependencies.
      - run: flutter pub get
      # Run build_runner to generate necessary code.
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      # Run widget tests for our flutter project.
      - run: flutter test
      # Build apk.
      - run: flutter build apk
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: app-release.apk
          path: build/app/outputs/apk/release/app-release.apk

  deploy-firebase:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: app-release.apk
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: internal
          file: app-release.apk
          releaseNotes: ${{ github.event.pull_request.body }}
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#404CAA'
          SLACK_ICON: https://avatars.githubusercontent.com/u/76764406?s=400&u=64e3d09b35663153ef7895b5acc678092df4bfa3&v=4
          SLACK_TITLE: Current Build for DASH iO Internal - ${{job.status}}
          SLACK_MESSAGE: ${{ github.event.pull_request.title }} \n Current SHA - ${{github.sha}} | Commit Message - ${{github.event.head_commit.message}} | Job Status - ${{job.status}}
          SLACK_USERNAME: code-duo-ci-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: Powered by Code Duo Labs. 
